name: Release Workflow

on:
  push:
    branches:
      - release

jobs:
  # unit_testing_ca:
  #   name: Unit Testing CA
  #   uses: ./.github/workflows/ca-develop.yaml

  # unit_testing_dms_enroller:
  #   name: Unit Testing DMS Enroller
  #   uses: ./.github/workflows/dms-enroller-develop.yaml

  # unit_testing_device_manager:
  #   name: Unit Testing Device Manager
  #   uses: ./.github/workflows/device-manager-develop.yaml

  # build_ca_dev_docker_image:
  #     name: CA - Release DEV docker images
  #     needs:
  #     - unit_testing_ca
  #     - unit_testing_dms_enroller
  #     - unit_testing_device_manager
  #     # runs-on: self-hosted
  #     runs-on: ubuntu-latest
  #     steps:        
  #     - name: Login to DockerHub
  #       uses: docker/login-action@v1 
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}
      
  #     - name: Build CA DEV docker image
  #       uses: docker/build-push-action@v2
  #       with:
  #         file: ci/ca.dockerfile
  #         build-args: |
  #           BASE_IMAGE=alpine:3.14
  #         tags: |
  #           lamassuiot/lamassu-ca-dev:${{ github.sha }}
  #           lamassuiot/lamassu-ca-dev:latest
  #         push: true

  # build_device_manager_dev_docker_image:
  #     name: Device Manager - Release DEV docker images
  #     needs:
  #     - unit_testing_ca
  #     - unit_testing_dms_enroller
  #     - unit_testing_device_manager
  #     # runs-on: self-hosted
  #     runs-on: ubuntu-latest
  #     steps:
  #     - name: Login to DockerHub
  #       uses: docker/login-action@v1 
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}

  #     - name: Build Device Manager DEV docker image
  #       uses: docker/build-push-action@v2
  #       with:
  #         file: ci/device-manager.dockerfile 
  #         build-args: |
  #           BASE_IMAGE=alpine:3.14
  #         tags: |
  #           lamassuiot/lamassu-device-manager-dev:${{ github.sha }}
  #           lamassuiot/lamassu-device-manager-dev:latest
  #         push: true

  # build_dms_enroller_dev_docker_image:
  #     name: DMS Enroller - Release DEV docker images
  #     needs:
  #     - unit_testing_ca
  #     - unit_testing_dms_enroller
  #     - unit_testing_device_manager
  #     # runs-on: self-hosted
  #     runs-on: ubuntu-latest
  #     steps:
  #     - name: Login to DockerHub
  #       uses: docker/login-action@v1 
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}

  #     - name: Build DMS Enroller DEV docker image
  #       uses: docker/build-push-action@v2
  #       with:
  #         file: ci/dms-enroller.dockerfile
  #         build-args: |
  #           BASE_IMAGE=alpine:3.14
  #         tags: |
  #           lamassuiot/lamassu-dms-enroller-dev:${{ github.sha }}
  #           lamassuiot/lamassu-dms-enroller-dev:latest
  #         push: true

  # build_ocsp_dev_docker_image:
  #     name: OCSP - Release DEV docker images
  #     needs:
  #     - unit_testing_ca
  #     - unit_testing_dms_enroller
  #     - unit_testing_device_manager
  #     # runs-on: self-hosted
  #     runs-on: ubuntu-latest
  #     steps:
  #     - name: Login to DockerHub
  #       uses: docker/login-action@v1 
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}

  #     - name: Build OCSP DEV docker image
  #       uses: docker/build-push-action@v2
  #       with:
  #         file: ci/ocsp.dockerfile
  #         build-args: |
  #           BASE_IMAGE=alpine:3.14
  #         tags: |
  #           lamassuiot/lamassu-ocsp-dev:${{ github.sha }}
  #           lamassuiot/lamassu-ocsp-dev:latest
  #         push: true

  # build_cloud_proxy_dev_docker_image:
  #     name: Cloud Proxy - Release DEV docker images
  #     needs:
  #     - unit_testing_ca
  #     - unit_testing_dms_enroller
  #     - unit_testing_device_manager
  #     # runs-on: self-hosted
  #     runs-on: ubuntu-latest
  #     steps:
  #     - name: Login to DockerHub
  #       uses: docker/login-action@v1 
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}

  #     - name: Build Cloud Proxy DEV docker image
  #       uses: docker/build-push-action@v2
  #       with:
  #         file: ci/cloud-proxy.dockerfile 
  #         build-args: |
  #           BASE_IMAGE=alpine:3.14
  #         tags: |
  #           lamassuiot/lamassu-cloud-proxy-dev:${{ github.sha }}
  #           lamassuiot/lamassu-cloud-proxy-dev:latest
  #         push: true

  deploy_to_release_env:
    name: Deploy to DEV Server
    # needs:
    # - build_ca_dev_docker_image
    # - build_cloud_proxy_dev_docker_image
    # - build_device_manager_dev_docker_image
    # - build_dms_enroller_dev_docker_image
    # - build_ocsp_dev_docker_image
    # runs-on: self-hosted
    runs-on: ubuntu-latest
    environment: release
    permissions:
      id-token: write
    outputs:
      server-ip: ${{ steps.get-server-ip.outputs.ip }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        # role-to-assume: arn:aws:iam::345876576284:role/LamassuGHActions
        # role-session-name: ghactionsrolesession
        # role-skip-session-tagging: true
        # role-duration-seconds: 3600 #1hour
        aws-region: eu-west-1
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Install node
      uses: actions/setup-node@v3
      with:
        node-version: 16.4.1
    
    - name: Install dependencies
      working-directory: .github/infrastructure/tests/e2e
      run: npm i &&  npm i -g cdk

    - name: CDK synth
      working-directory: .github/infrastructure/tests/e2e
      run: cdk synth

    - name: CDK deploy
      working-directory: .github/infrastructure/tests/e2e
      run: cdk deploy --require-approval never --json --outputs-file cdk-outputs.json

    - id: get-server-ip
      name: cat cdk output
      working-directory: .github/infrastructure/tests/e2e
      run: |
        content=`cat cdk-outputs.json`
        # the following lines are only required for multi line json
        content="${content//'%'/'%25'}"
        content="${content//$'\n'/'%0A'}"
        content="${content//$'\r'/'%0D'}"
        # end of optional handling for multi line json
        ip=fromJSON($content).LamassuGHActionsE2EStack.EC2Instanceoutput
        echo $ip
        echo "::set-output name=ip::$ip"

  integration_test:
    name: Integration test
    runs-on: ubuntu-latest
    needs:
    - deploy_to_release_env
    steps:
    # - name: Git clone Lamassu Compose
    #   run: git clone https://github.com/lamassuiot/lamassu-compose -b develop
    - name: Get IP
      run: echo ${{ needs.deploy_to_release_env.outputs.server-ip }}

  ocsp_test:
    name: OCSP test
    runs-on: ubuntu-latest
    needs:
    - deploy_to_release_env
    steps:
    - name: Checkout
      uses: actions/checkout@v2

  est_test:
    name: EST test
    runs-on: ubuntu-latest
    needs:
    - deploy_to_release_env
    steps:
    - name: Checkout
      uses: actions/checkout@v2